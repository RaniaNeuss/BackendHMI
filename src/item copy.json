{"id":"v_b7112448b-82312","name":"raniatest","profile":{"width":1024,"height":768,"bkcolor":"#ffffffff","margin":10,"align":"topCenter","gridType":"fixed"},"items":{"GSE_1fc33c5e-cddb4250":{"id":"GSE_1fc33c5e-cddb4250","type":"svg-ext-gauge_semaphore","name":"led_1","property":{"events":[],"actions":[],"address":"http://127.0.0.1:1881/_widgets/dynamicSVG/blower4.svg","variableId":"t_62474886-d147458f","variableValue":"1","ranges":[{"min":1,"max":5,"color":"#d8d8d8ff","type":2,"stroke":""},{"min":5,"max":100,"color":"#ffff00ff","type":2,"stroke":""}]},"label":"HtmlSemaphore"},"GSE_01249405-f4384a3c":{"id":"GSE_01249405-f4384a3c","type":"svg-ext-gauge_semaphore","name":"led_2","property":{"variableId":"t_62474886-d147458f","variableValue":"1","ranges":[{"min":1,"max":5,"color":"#d8d8d8ff","type":2,"stroke":""},{"min":6,"max":10,"color":"#ffff00ff","type":2,"stroke":""}],"events":[],"actions":[]},"label":"HtmlSemaphore"},"OXC_7d604bbf-b8fb47e3":{"id":"OXC_7d604bbf-b8fb47e3","type":"svg-ext-own_ctrl-image","name":"shape_1","property":{"events":[],"actions":[],"address":"http://127.0.0.1:1881/_widgets/dynamicSVG/pipe_3d_h3.svg","type":"widget","svgGuid":"613613411a6_7785","svgContent":"<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" id=\"Layer_1_613613411a6_7785\" viewBox=\"0 0 100 100\" xml:space=\"preserve\" width=\"100\" height=\"100\" preserveAspectRatio=\"none\">\n<desc>Copyright Opto 22</desc>\n<g>\n<g id=\"frame_613613411a6_7785\">\n\t<rect fill=\"none\" width=\"100\" height=\"100\"></rect>\n</g>\n<g id=\"shape_613613411a6_7785\">\n\t<rect y=\"46.83\" fill=\"#b4b4b4\" width=\"100\" height=\"6.34\"></rect>\n</g>\n<g id=\"dark_613613411a6_7785\">\n\t<rect y=\"47.226\" fill=\"#bfbfbf\" width=\"100\" height=\"5.548\"></rect>\n</g>\n<g id=\"light_613613411a6_7785\">\n\t<rect y=\"48.019\" fill=\"#dadada\" width=\"100\" height=\"3.963\"></rect>\n</g>\n<g id=\"hlight_613613411a6_7785\">\n\t<rect y=\"48.613\" fill=\"#f8f8f8\" width=\"100\" height=\"2.774\"></rect>\n</g>\n</g>\n\n  \n\n</svg>","scriptContent":{"moduleId":"wModule_613613411a6_7785","content":"var wModule_613613411a6_7785 = window.wModule_613613411a6_7785 || {};\n(function() {\n    \n    \n\n\t  // Global Parameters and Variables\n    //!export-start\n    let _pn_setState         = 0;\n    let _pb_boolState        = false;\n\t  let _pn_setInterval      = 500;\n    let _pc_state0Colour     = '#b4b4b4';\n    let _pc_state1Colour     = '#00ff00';\n    let _pc_state2Colour     = '#ff9500';\n    let _pc_state3Colour     = '#ff0000';\n    let _pc_state4Colour     = '#3c3c3c';\n    let _pc_state5Colour     = '#dcdcdc';\n    let _pn_lightShade       = 50;\n    let _pn_highLightShade   = 90;\n    let _pn_darkShade        = 15;\n    let _pn_shadowShade      = -15;\n    \nwModule_613613411a6_7785._pn_setState = _pn_setState;\nwModule_613613411a6_7785._pb_boolState = _pb_boolState;\nwModule_613613411a6_7785._pn_setInterval = _pn_setInterval;\nwModule_613613411a6_7785._pc_state0Colour = _pc_state0Colour;\nwModule_613613411a6_7785._pc_state1Colour = _pc_state1Colour;\nwModule_613613411a6_7785._pc_state2Colour = _pc_state2Colour;\nwModule_613613411a6_7785._pc_state3Colour = _pc_state3Colour;\nwModule_613613411a6_7785._pc_state4Colour = _pc_state4Colour;\nwModule_613613411a6_7785._pc_state5Colour = _pc_state5Colour;\nwModule_613613411a6_7785._pn_lightShade = _pn_lightShade;\nwModule_613613411a6_7785._pn_highLightShade = _pn_highLightShade;\nwModule_613613411a6_7785._pn_darkShade = _pn_darkShade;\nwModule_613613411a6_7785._pn_shadowShade = _pn_shadowShade;//!export-end\n\t  let stateNumber = 0;\n    let blinkInterval;\n\n    // Function to update the color based on the set state\n    function logic() {\n\n      switch (stateNumber) {\n        case 0: // off\n          setBaseColor( _pc_state0Colour);\n\t\t      clearBlinking();\n          break; \n        case 1: // run\n          setBaseColor( _pc_state1Colour);\n\t\t      clearBlinking();\n          break;\n        case 2: // warning\n          setBaseColor( _pc_state2Colour);\n\t\t      clearBlinking();\n          break;\n        case 3: // fault\n\t\t      startBlinking( _pc_state0Colour, _pc_state3Colour, _pn_setInterval );\n          break;\n        case 4: // invalid \n          setBaseColor( _pc_state4Colour);\n\t\t      clearBlinking();\n          break;\n        case 5: // spare\n          setBaseColor( _pc_state5Colour);\n\t\t      clearBlinking();\n          break;\n        default:\n          console.log('Undefined State');\n\t\t      clearBlinking();\n      }\n    }\n\n    // Initial setup\n    function init() {\n      logic(); // Initial state rendering\n    }\n\n    // Function to update values from Fuxa\n    function putValue(id, value) {\n      if (id === '_pn_setState') {\n        stateNumber = value;\n        logic(); \n      }\n      if (id === '_pb_boolState') {\n        _pb_boolState = value;\n        if (_pb_boolState === true) {\n          stateNumber = 1;\n        } else if (_pb_boolState === false) {\n          stateNumber = 0;\n        }\n        logic(); \n      }\n\t    if (id === '_pn_setInterval'   ) _pn_setInterval    = value;\n      if (id === '_pc_state0Colour'  ) _pc_state0Colour   = value;\n      if (id === '_pc_state1Colour'  ) _pc_state1Colour   = value;\n      if (id === '_pc_state2Colour'  ) _pc_state2Colour   = value;\n      if (id === '_pc_state3Colour'  ) _pc_state3Colour   = value;\n      if (id === '_pc_state4Colour'  ) _pc_state4Colour   = value;\n      if (id === '_pc_state5Colour'  ) _pc_state5Colour   = value;\n      if (id === '_pn_lightShade'    ) _pn_lightShade     = value;\n      if (id === '_pn_highLightShade') _pn_highLightShade = value;\n      if (id === '_pn_darkShade'     ) _pn_darkShade      = value;\n      if (id === '_pn_shadowShade'   ) _pn_shadowShade    = value;\n    }\n\n    // Function to send values back to Fuxa (placeholder)\n    function postValue(id, value) {\n      console.error('Not defined!');\n    }\n\n    // Initialize the SVG\n    init();\n\n\t// Function to update the color for the base shape group\n    function setBaseColor(baseColor) {\n      // Define color manipulations based on base color\n      const darkColor   = percentColor(baseColor, _pn_darkShade);\n      const shadowColor = percentColor(baseColor, _pn_shadowShade);\n      const lightColor  = percentColor(baseColor, _pn_lightShade);\n      const hlightColor = percentColor(baseColor, _pn_highLightShade);\n\n\t  document.getElementById('shape_613613411a6_7785').querySelectorAll('*').forEach(function(elem) {\n      elem.setAttribute('fill', baseColor);\n      });\n      document.getElementById('dark_613613411a6_7785').querySelectorAll('*').forEach(function(elem) {\n      elem.setAttribute('fill', darkColor);\n      });\n      //document.getElementById('shadow').querySelectorAll('*').forEach(function(elem) {\n      //elem.setAttribute('fill', shadowColor);\n      //});\n      document.getElementById('light_613613411a6_7785').querySelectorAll('*').forEach(function(elem) {\n      elem.setAttribute('fill', lightColor);\n      });\n\t  document.getElementById('hlight_613613411a6_7785').querySelectorAll('*').forEach(function(elem) {\n      elem.setAttribute('fill', hlightColor);\n      });\n\t}\n\n    // Function to manipulate color brightness/darkness (-100% = Black) (0 = unchanged) (100% = White)\n    function percentColor(color, percent) {\n      let R = parseInt(color.substring(1, 3), 16);\n      let G = parseInt(color.substring(3, 5), 16);\n      let B = parseInt(color.substring(5, 7), 16);\n\n      // Calculate the adjustment factor based on the percentage\n      if (percent > 0) {\n          // Lightening - move each channel closer to 255 (white)\n          R = Math.round(R + (255 - R) * (percent / 100));\n          G = Math.round(G + (255 - G) * (percent / 100));\n          B = Math.round(B + (255 - B) * (percent / 100));\n      } else {\n          // Darkening - move each channel closer to 0 (black)\n          R = Math.round(R * (1 + (percent / 100)));\n          G = Math.round(G * (1 + (percent / 100)));\n          B = Math.round(B * (1 + (percent / 100)));\n      }\n\n      // Clamp values to the [0, 255] range\n      R = Math.max(0, Math.min(255, R));\n      G = Math.max(0, Math.min(255, G));\n      B = Math.max(0, Math.min(255, B));\n\n      // Convert back to hexadecimal\n      const RR = (R.toString(16).length === 1) ? \"0\" + R.toString(16) : R.toString(16);\n      const GG = (G.toString(16).length === 1) ? \"0\" + G.toString(16) : G.toString(16);\n      const BB = (B.toString(16).length === 1) ? \"0\" + B.toString(16) : B.toString(16);\n\n      return \"#\" + RR + GG + BB;\n    }\n\n\t// Function to start blinking between two colors\n    function startBlinking(color1, color2, interval) {\n      clearBlinking(); // Clear any existing blinking interval\n    \n      let isColor1 = true; \n      blinkInterval = setInterval(function() {\n        const checkDestroy = document.getElementById('Layer_1_613613411a6_7785'); // Important must be name of the SVG!\n        if (!checkDestroy) {\n          clearBlinking(); \n          return;\n        }\n        if (isColor1) {\n          setBaseColor(color1); \n        } else {\n          setBaseColor(color2); \n        }\n        isColor1 = !isColor1; \n      }, interval);\n\n      // Set up the MutationObserver to watch for removal of the SVG element\n      const observer = new MutationObserver((mutations) => {\n        mutations.forEach((mutation) => {\n          mutation.removedNodes.forEach((node) => {\n            if (node.id === 'Layer_1_613613411a6_7785') { // Important must be name of the SVG!\n              clearBlinking(); \n              observer.disconnect(); \n            }\n          });\n        });\n      });\n\n      // Start observing the body or a parent element of the SVG\n      observer.observe(document.body, { childList: true, subtree: true }); \n    }\n\n    // Function to clear the blinking interval\n    function clearBlinking() {\n      if (blinkInterval) {\n        clearInterval(blinkInterval);\n        blinkInterval = null;\n      }\n    }\n\n    \n  \nwModule_613613411a6_7785.logic = logic;\nwModule_613613411a6_7785.init = init;\nwModule_613613411a6_7785.putValue = putValue;\nwModule_613613411a6_7785.postValue = postValue;\nwModule_613613411a6_7785.setBaseColor = setBaseColor;\nwModule_613613411a6_7785.percentColor = percentColor;\nwModule_613613411a6_7785.startBlinking = startBlinking;\nwModule_613613411a6_7785.clearBlinking = clearBlinking;\n})();\nwindow.wModule_613613411a6_7785=wModule_613613411a6_7785"},"varsToBind":[{"originalName":"_pn_setState","name":"_pn_setState","type":"number","variableId":"t_62474886-d147458f","variableRaw":{"id":"t_62474886-d147458f","name":"age","label":"age","value":8,"type":"number","address":"results:[0]:registered:age","daq":{"enabled":false,"interval":60,"changed":false,"restored":false},"timestamp":1738138310429},"variableValue":"1"},{"originalName":"_pb_boolState","name":"_pb_boolState","type":"boolean","variableId":"t_62474886-d147458f","variableRaw":{"id":"t_62474886-d147458f","name":"age","label":"age","value":8,"type":"number","address":"results:[0]:registered:age","daq":{"enabled":false,"interval":60,"changed":false,"restored":false},"timestamp":1738138310429},"variableValue":"1"},{"originalName":"_pn_setInterval","name":"_pn_setInterval","type":"number","variableId":"t_62474886-d147458f","variableRaw":{"id":"t_62474886-d147458f","name":"age","label":"age","value":8,"type":"number","address":"results:[0]:registered:age","daq":{"enabled":false,"interval":60,"changed":false,"restored":false},"timestamp":1738138310429},"variableValue":"1"},{"originalName":"_pc_state0Colour","name":"_pc_state0Colour","type":"color","variableId":"t_62474886-d147458f","variableRaw":{"id":"t_62474886-d147458f","name":"age","label":"age","value":8,"type":"number","address":"results:[0]:registered:age","daq":{"enabled":false,"interval":60,"changed":false,"restored":false},"timestamp":1738138310429},"variableValue":"1"},{"originalName":"_pc_state1Colour","name":"_pc_state1Colour","type":"color","variableId":"t_62474886-d147458f","variableRaw":{"id":"t_62474886-d147458f","name":"age","label":"age","value":8,"type":"number","address":"results:[0]:registered:age","daq":{"enabled":false,"interval":60,"changed":false,"restored":false},"timestamp":1738138310429},"variableValue":"1"},{"originalName":"_pc_state2Colour","name":"_pc_state2Colour","type":"color","variableId":"t_62474886-d147458f","variableRaw":{"id":"t_62474886-d147458f","name":"age","label":"age","value":8,"type":"number","address":"results:[0]:registered:age","daq":{"enabled":false,"interval":60,"changed":false,"restored":false},"timestamp":1738138310429},"variableValue":"1"},{"originalName":"_pc_state3Colour","name":"_pc_state3Colour","type":"color","variableId":"t_62474886-d147458f","variableRaw":{"id":"t_62474886-d147458f","name":"age","label":"age","value":8,"type":"number","address":"results:[0]:registered:age","daq":{"enabled":false,"interval":60,"changed":false,"restored":false},"timestamp":1738138310429},"variableValue":"1"},{"originalName":"_pc_state4Colour","name":"_pc_state4Colour","type":"color","variableId":null,"variableRaw":null,"variableValue":"1"},{"originalName":"_pc_state5Colour","name":"_pc_state5Colour","type":"color","variableId":null,"variableRaw":null,"variableValue":"1"},{"originalName":"_pn_lightShade","name":"_pn_lightShade","type":"number","variableId":null,"variableRaw":null,"variableValue":"1"},{"originalName":"_pn_highLightShade","name":"_pn_highLightShade","type":"number","variableId":null,"variableRaw":null,"variableValue":"1"},{"originalName":"_pn_darkShade","name":"_pn_darkShade","type":"number","variableId":null,"variableRaw":null,"variableValue":"1"},{"originalName":"_pn_shadowShade","name":"_pn_shadowShade","type":"number"}]},"label":"HtmlImage"},"OXC_133116d5-ac9a4ff3":{"id":"OXC_133116d5-ac9a4ff3","type":"svg-ext-own_ctrl-image","name":"","property":{"events":[],"actions":[],"address":"http://127.0.0.1:1881/_widgets/dynamicSVG/blower3.svg","type":"widget","svgGuid":"111310134398_114a13","svgContent":"<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" id=\"Layer_1_111310134398_114a13\" x=\"0px\" y=\"0px\" viewBox=\"0 0 100 100\" xml:space=\"preserve\" width=\"100\" height=\"100\"><desc>Copyright Opto 22</desc> \n<g>\n<g id=\"shape_111310134398_114a13\">\n\t<path fill=\"#b4b4b4\" d=\"M43.433,93.433C19.484,93.433,0,73.949,0,50S19.484,6.567,43.433,6.567H100v33.051H85.606   c0.837,3.4,1.26,6.884,1.26,10.381C86.866,73.949,67.382,93.433,43.433,93.433z M43.433,9.48C21.09,9.48,2.913,27.657,2.913,50   S21.09,90.52,43.433,90.52c22.343,0,40.52-18.177,40.52-40.52c0-3.862-0.554-7.707-1.645-11.428l-0.547-1.866h15.326V9.48H43.433z\"></path>\n</g>\n<g id=\"dark_111310134398_114a13\">\n\t<path fill=\"#bfbfbf\" d=\"M43.433,69.729c-10.878,0-19.728-8.851-19.728-19.729s8.85-19.728,19.728-19.728   c10.878,0,19.728,8.85,19.728,19.728S54.312,69.729,43.433,69.729z M43.433,32.272c-9.775,0-17.728,7.953-17.728,17.728   s7.953,17.729,17.728,17.729c9.775,0,17.728-7.953,17.728-17.729S53.208,32.272,43.433,32.272z\"></path>\n\t<path fill=\"#bfbfbf\" d=\"M59.161,9.48H43.433v0.044c17.663,0,32.709,11.376,38.222,27.183h3.167   C80.807,24.232,71.3,14.208,59.161,9.48z\"></path>\n</g>\n</g>\n\n  \n\n</svg>","scriptContent":{"moduleId":"wModule_111310134398_114a13","content":"var wModule_111310134398_114a13 = window.wModule_111310134398_114a13 || {};\n(function() {\n    \n    \n\n\t  // Global Parameters and Variables\n    //!export-start\n    let _pn_setState         = 0;\n    let _pb_boolState        = false;\n\t  let _pn_setInterval      = 500;\n    let _pc_state0Colour     = '#b4b4b4';\n    let _pc_state1Colour     = '#00ff00';\n    let _pc_state2Colour     = '#ff9500';\n    let _pc_state3Colour     = '#ff0000';\n    let _pc_state4Colour     = '#3c3c3c';\n    let _pc_state5Colour     = '#dcdcdc';\n    let _pn_lightShade       = 50;\n    let _pn_highLightShade   = 90;\n    let _pn_darkShade        = 15;\n    let _pn_shadowShade      = -15;\n    \nwModule_111310134398_114a13._pn_setState = _pn_setState;\nwModule_111310134398_114a13._pb_boolState = _pb_boolState;\nwModule_111310134398_114a13._pn_setInterval = _pn_setInterval;\nwModule_111310134398_114a13._pc_state0Colour = _pc_state0Colour;\nwModule_111310134398_114a13._pc_state1Colour = _pc_state1Colour;\nwModule_111310134398_114a13._pc_state2Colour = _pc_state2Colour;\nwModule_111310134398_114a13._pc_state3Colour = _pc_state3Colour;\nwModule_111310134398_114a13._pc_state4Colour = _pc_state4Colour;\nwModule_111310134398_114a13._pc_state5Colour = _pc_state5Colour;\nwModule_111310134398_114a13._pn_lightShade = _pn_lightShade;\nwModule_111310134398_114a13._pn_highLightShade = _pn_highLightShade;\nwModule_111310134398_114a13._pn_darkShade = _pn_darkShade;\nwModule_111310134398_114a13._pn_shadowShade = _pn_shadowShade;//!export-end\n\t  let stateNumber = 0;\n    let blinkInterval;\n\n    // Function to update the color based on the set state\n    function logic() {\n\n      switch (stateNumber) {\n        case 0: // off\n          setBaseColor( _pc_state0Colour);\n\t\t      clearBlinking();\n          break; \n        case 1: // run\n          setBaseColor( _pc_state1Colour);\n\t\t      clearBlinking();\n          break;\n        case 2: // warning\n          setBaseColor( _pc_state2Colour);\n\t\t      clearBlinking();\n          break;\n        case 3: // fault\n\t\t      startBlinking( _pc_state0Colour, _pc_state3Colour, _pn_setInterval );\n          break;\n        case 4: // invalid \n          setBaseColor( _pc_state4Colour);\n\t\t      clearBlinking();\n          break;\n        case 5: // spare\n          setBaseColor( _pc_state5Colour);\n\t\t      clearBlinking();\n          break;\n        default:\n          console.log('Undefined State');\n\t\t      clearBlinking();\n      }\n    }\n\n    // Initial setup\n    function init() {\n      logic(); // Initial state rendering\n    }\n\n    // Function to update values from Fuxa\n    function putValue(id, value) {\n      if (id === '_pn_setState') {\n        stateNumber = value;\n        logic(); \n      }\n      if (id === '_pb_boolState') {\n        _pb_boolState = value;\n        if (_pb_boolState === true) {\n          stateNumber = 1;\n        } else if (_pb_boolState === false) {\n          stateNumber = 0;\n        }\n        logic(); \n      }\n\t    if (id === '_pn_setInterval'   ) _pn_setInterval    = value;\n      if (id === '_pc_state0Colour'  ) _pc_state0Colour   = value;\n      if (id === '_pc_state1Colour'  ) _pc_state1Colour   = value;\n      if (id === '_pc_state2Colour'  ) _pc_state2Colour   = value;\n      if (id === '_pc_state3Colour'  ) _pc_state3Colour   = value;\n      if (id === '_pc_state4Colour'  ) _pc_state4Colour   = value;\n      if (id === '_pc_state5Colour'  ) _pc_state5Colour   = value;\n      if (id === '_pn_lightShade'    ) _pn_lightShade     = value;\n      if (id === '_pn_highLightShade') _pn_highLightShade = value;\n      if (id === '_pn_darkShade'     ) _pn_darkShade      = value;\n      if (id === '_pn_shadowShade'   ) _pn_shadowShade    = value;\n    }\n\n    // Function to send values back to Fuxa (placeholder)\n    function postValue(id, value) {\n      console.error('Not defined!');\n    }\n\n    // Initialize the SVG\n    init();\n\n\t// Function to update the color for the base shape group\n    function setBaseColor(baseColor) {\n      // Define color manipulations based on base color\n      const darkColor   = percentColor(baseColor, _pn_darkShade);\n      const shadowColor = percentColor(baseColor, _pn_shadowShade);\n      const lightColor  = percentColor(baseColor, _pn_lightShade);\n      const hlightColor = percentColor(baseColor, _pn_highLightShade);\n\n\t  document.getElementById('shape_111310134398_114a13').querySelectorAll('*').forEach(function(elem) {\n      elem.setAttribute('fill', baseColor);\n      });\n      document.getElementById('dark_111310134398_114a13').querySelectorAll('*').forEach(function(elem) {\n      elem.setAttribute('fill', darkColor);\n      });\n      //document.getElementById('shadow').querySelectorAll('*').forEach(function(elem) {\n      //elem.setAttribute('fill', shadowColor);\n      //});\n      //document.getElementById('light').querySelectorAll('*').forEach(function(elem) {\n      //elem.setAttribute('fill', lightColor);\n      //});\n\t  //document.getElementById('hlight').querySelectorAll('*').forEach(function(elem) {\n      //elem.setAttribute('fill', hlightColor);\n      //});\n\t}\n\n    // Function to manipulate color brightness/darkness (-100% = Black) (0 = unchanged) (100% = White)\n    function percentColor(color, percent) {\n      let R = parseInt(color.substring(1, 3), 16);\n      let G = parseInt(color.substring(3, 5), 16);\n      let B = parseInt(color.substring(5, 7), 16);\n\n      // Calculate the adjustment factor based on the percentage\n      if (percent > 0) {\n          // Lightening - move each channel closer to 255 (white)\n          R = Math.round(R + (255 - R) * (percent / 100));\n          G = Math.round(G + (255 - G) * (percent / 100));\n          B = Math.round(B + (255 - B) * (percent / 100));\n      } else {\n          // Darkening - move each channel closer to 0 (black)\n          R = Math.round(R * (1 + (percent / 100)));\n          G = Math.round(G * (1 + (percent / 100)));\n          B = Math.round(B * (1 + (percent / 100)));\n      }\n\n      // Clamp values to the [0, 255] range\n      R = Math.max(0, Math.min(255, R));\n      G = Math.max(0, Math.min(255, G));\n      B = Math.max(0, Math.min(255, B));\n\n      // Convert back to hexadecimal\n      const RR = (R.toString(16).length === 1) ? \"0\" + R.toString(16) : R.toString(16);\n      const GG = (G.toString(16).length === 1) ? \"0\" + G.toString(16) : G.toString(16);\n      const BB = (B.toString(16).length === 1) ? \"0\" + B.toString(16) : B.toString(16);\n\n      return \"#\" + RR + GG + BB;\n    }\n\n\t// Function to start blinking between two colors\n    function startBlinking(color1, color2, interval) {\n      clearBlinking(); // Clear any existing blinking interval\n    \n      let isColor1 = true; \n      blinkInterval = setInterval(function() {\n        const checkDestroy = document.getElementById('Layer_1_111310134398_114a13'); // Important must be name of the SVG!\n        if (!checkDestroy) {\n          clearBlinking(); \n          return;\n        }\n        if (isColor1) {\n          setBaseColor(color1); \n        } else {\n          setBaseColor(color2); \n        }\n        isColor1 = !isColor1; \n      }, interval);\n\n      // Set up the MutationObserver to watch for removal of the SVG element\n      const observer = new MutationObserver((mutations) => {\n        mutations.forEach((mutation) => {\n          mutation.removedNodes.forEach((node) => {\n            if (node.id === 'Layer_1_111310134398_114a13') { // Important must be name of the SVG!\n              clearBlinking(); \n              observer.disconnect(); \n            }\n          });\n        });\n      });\n\n      // Start observing the body or a parent element of the SVG\n      observer.observe(document.body, { childList: true, subtree: true }); \n    }\n\n    // Function to clear the blinking interval\n    function clearBlinking() {\n      if (blinkInterval) {\n        clearInterval(blinkInterval);\n        blinkInterval = null;\n      }\n    }\n\n    \n  \nwModule_111310134398_114a13.logic = logic;\nwModule_111310134398_114a13.init = init;\nwModule_111310134398_114a13.putValue = putValue;\nwModule_111310134398_114a13.postValue = postValue;\nwModule_111310134398_114a13.setBaseColor = setBaseColor;\nwModule_111310134398_114a13.percentColor = percentColor;\nwModule_111310134398_114a13.startBlinking = startBlinking;\nwModule_111310134398_114a13.clearBlinking = clearBlinking;\n})();\nwindow.wModule_111310134398_114a13=wModule_111310134398_114a13"},"varsToBind":[{"originalName":"_pn_setState","name":"_pn_setState","type":"number"},{"originalName":"_pb_boolState","name":"_pb_boolState","type":"boolean"},{"originalName":"_pn_setInterval","name":"_pn_setInterval","type":"number"},{"originalName":"_pc_state0Colour","name":"_pc_state0Colour","type":"color"},{"originalName":"_pc_state1Colour","name":"_pc_state1Colour","type":"color"},{"originalName":"_pc_state2Colour","name":"_pc_state2Colour","type":"color"},{"originalName":"_pc_state3Colour","name":"_pc_state3Colour","type":"color"},{"originalName":"_pc_state4Colour","name":"_pc_state4Colour","type":"color"},{"originalName":"_pc_state5Colour","name":"_pc_state5Colour","type":"color"},{"originalName":"_pn_lightShade","name":"_pn_lightShade","type":"number"},{"originalName":"_pn_highLightShade","name":"_pn_highLightShade","type":"number"},{"originalName":"_pn_darkShade","name":"_pn_darkShade","type":"number"},{"originalName":"_pn_shadowShade","name":"_pn_shadowShade","type":"number"}]},"label":"HtmlImage"},"OXC_8b8f28b8-8ce34e08":{"id":"OXC_8b8f28b8-8ce34e08","type":"svg-ext-own_ctrl-image","name":"shape_2","property":{"events":[],"actions":[],"address":"http://127.0.0.1:1881/_widgets/dynamicSVG/blower3.svg","type":"widget","svgGuid":"7613749810_957b","svgContent":"<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" id=\"Layer_1_7613749810_957b\" x=\"0px\" y=\"0px\" viewBox=\"0 0 100 100\" xml:space=\"preserve\" width=\"100\" height=\"100\"><desc>Copyright Opto 22</desc> \n<g>\n<g id=\"shape_7613749810_957b\">\n\t<path fill=\"#b4b4b4\" d=\"M43.433,93.433C19.484,93.433,0,73.949,0,50S19.484,6.567,43.433,6.567H100v33.051H85.606   c0.837,3.4,1.26,6.884,1.26,10.381C86.866,73.949,67.382,93.433,43.433,93.433z M43.433,9.48C21.09,9.48,2.913,27.657,2.913,50   S21.09,90.52,43.433,90.52c22.343,0,40.52-18.177,40.52-40.52c0-3.862-0.554-7.707-1.645-11.428l-0.547-1.866h15.326V9.48H43.433z\"></path>\n</g>\n<g id=\"dark_7613749810_957b\">\n\t<path fill=\"#bfbfbf\" d=\"M43.433,69.729c-10.878,0-19.728-8.851-19.728-19.729s8.85-19.728,19.728-19.728   c10.878,0,19.728,8.85,19.728,19.728S54.312,69.729,43.433,69.729z M43.433,32.272c-9.775,0-17.728,7.953-17.728,17.728   s7.953,17.729,17.728,17.729c9.775,0,17.728-7.953,17.728-17.729S53.208,32.272,43.433,32.272z\"></path>\n\t<path fill=\"#bfbfbf\" d=\"M59.161,9.48H43.433v0.044c17.663,0,32.709,11.376,38.222,27.183h3.167   C80.807,24.232,71.3,14.208,59.161,9.48z\"></path>\n</g>\n</g>\n\n  \n\n</svg>","scriptContent":{"moduleId":"wModule_7613749810_957b","content":"var wModule_7613749810_957b = window.wModule_7613749810_957b || {};\n(function() {\n    \n    \n\n\t  // Global Parameters and Variables\n    //!export-start\n    let _pn_setState         = 0;\n    let _pb_boolState        = false;\n\t  let _pn_setInterval      = 500;\n    let _pc_state0Colour     = '#b4b4b4';\n    let _pc_state1Colour     = '#00ff00';\n    let _pc_state2Colour     = '#ff9500';\n    let _pc_state3Colour     = '#ff0000';\n    let _pc_state4Colour     = '#3c3c3c';\n    let _pc_state5Colour     = '#dcdcdc';\n    let _pn_lightShade       = 50;\n    let _pn_highLightShade   = 90;\n    let _pn_darkShade        = 15;\n    let _pn_shadowShade      = -15;\n    \nwModule_7613749810_957b._pn_setState = _pn_setState;\nwModule_7613749810_957b._pb_boolState = _pb_boolState;\nwModule_7613749810_957b._pn_setInterval = _pn_setInterval;\nwModule_7613749810_957b._pc_state0Colour = _pc_state0Colour;\nwModule_7613749810_957b._pc_state1Colour = _pc_state1Colour;\nwModule_7613749810_957b._pc_state2Colour = _pc_state2Colour;\nwModule_7613749810_957b._pc_state3Colour = _pc_state3Colour;\nwModule_7613749810_957b._pc_state4Colour = _pc_state4Colour;\nwModule_7613749810_957b._pc_state5Colour = _pc_state5Colour;\nwModule_7613749810_957b._pn_lightShade = _pn_lightShade;\nwModule_7613749810_957b._pn_highLightShade = _pn_highLightShade;\nwModule_7613749810_957b._pn_darkShade = _pn_darkShade;\nwModule_7613749810_957b._pn_shadowShade = _pn_shadowShade;//!export-end\n\t  let stateNumber = 0;\n    let blinkInterval;\n\n    // Function to update the color based on the set state\n    function logic() {\n\n      switch (stateNumber) {\n        case 0: // off\n          setBaseColor( _pc_state0Colour);\n\t\t      clearBlinking();\n          break; \n        case 1: // run\n          setBaseColor( _pc_state1Colour);\n\t\t      clearBlinking();\n          break;\n        case 2: // warning\n          setBaseColor( _pc_state2Colour);\n\t\t      clearBlinking();\n          break;\n        case 3: // fault\n\t\t      startBlinking( _pc_state0Colour, _pc_state3Colour, _pn_setInterval );\n          break;\n        case 4: // invalid \n          setBaseColor( _pc_state4Colour);\n\t\t      clearBlinking();\n          break;\n        case 5: // spare\n          setBaseColor( _pc_state5Colour);\n\t\t      clearBlinking();\n          break;\n        default:\n          console.log('Undefined State');\n\t\t      clearBlinking();\n      }\n    }\n\n    // Initial setup\n    function init() {\n      logic(); // Initial state rendering\n    }\n\n    // Function to update values from Fuxa\n    function putValue(id, value) {\n      if (id === '_pn_setState') {\n        stateNumber = value;\n        logic(); \n      }\n      if (id === '_pb_boolState') {\n        _pb_boolState = value;\n        if (_pb_boolState === true) {\n          stateNumber = 1;\n        } else if (_pb_boolState === false) {\n          stateNumber = 0;\n        }\n        logic(); \n      }\n\t    if (id === '_pn_setInterval'   ) _pn_setInterval    = value;\n      if (id === '_pc_state0Colour'  ) _pc_state0Colour   = value;\n      if (id === '_pc_state1Colour'  ) _pc_state1Colour   = value;\n      if (id === '_pc_state2Colour'  ) _pc_state2Colour   = value;\n      if (id === '_pc_state3Colour'  ) _pc_state3Colour   = value;\n      if (id === '_pc_state4Colour'  ) _pc_state4Colour   = value;\n      if (id === '_pc_state5Colour'  ) _pc_state5Colour   = value;\n      if (id === '_pn_lightShade'    ) _pn_lightShade     = value;\n      if (id === '_pn_highLightShade') _pn_highLightShade = value;\n      if (id === '_pn_darkShade'     ) _pn_darkShade      = value;\n      if (id === '_pn_shadowShade'   ) _pn_shadowShade    = value;\n    }\n\n    // Function to send values back to Fuxa (placeholder)\n    function postValue(id, value) {\n      console.error('Not defined!');\n    }\n\n    // Initialize the SVG\n    init();\n\n\t// Function to update the color for the base shape group\n    function setBaseColor(baseColor) {\n      // Define color manipulations based on base color\n      const darkColor   = percentColor(baseColor, _pn_darkShade);\n      const shadowColor = percentColor(baseColor, _pn_shadowShade);\n      const lightColor  = percentColor(baseColor, _pn_lightShade);\n      const hlightColor = percentColor(baseColor, _pn_highLightShade);\n\n\t  document.getElementById('shape_7613749810_957b').querySelectorAll('*').forEach(function(elem) {\n      elem.setAttribute('fill', baseColor);\n      });\n      document.getElementById('dark_7613749810_957b').querySelectorAll('*').forEach(function(elem) {\n      elem.setAttribute('fill', darkColor);\n      });\n      //document.getElementById('shadow').querySelectorAll('*').forEach(function(elem) {\n      //elem.setAttribute('fill', shadowColor);\n      //});\n      //document.getElementById('light').querySelectorAll('*').forEach(function(elem) {\n      //elem.setAttribute('fill', lightColor);\n      //});\n\t  //document.getElementById('hlight').querySelectorAll('*').forEach(function(elem) {\n      //elem.setAttribute('fill', hlightColor);\n      //});\n\t}\n\n    // Function to manipulate color brightness/darkness (-100% = Black) (0 = unchanged) (100% = White)\n    function percentColor(color, percent) {\n      let R = parseInt(color.substring(1, 3), 16);\n      let G = parseInt(color.substring(3, 5), 16);\n      let B = parseInt(color.substring(5, 7), 16);\n\n      // Calculate the adjustment factor based on the percentage\n      if (percent > 0) {\n          // Lightening - move each channel closer to 255 (white)\n          R = Math.round(R + (255 - R) * (percent / 100));\n          G = Math.round(G + (255 - G) * (percent / 100));\n          B = Math.round(B + (255 - B) * (percent / 100));\n      } else {\n          // Darkening - move each channel closer to 0 (black)\n          R = Math.round(R * (1 + (percent / 100)));\n          G = Math.round(G * (1 + (percent / 100)));\n          B = Math.round(B * (1 + (percent / 100)));\n      }\n\n      // Clamp values to the [0, 255] range\n      R = Math.max(0, Math.min(255, R));\n      G = Math.max(0, Math.min(255, G));\n      B = Math.max(0, Math.min(255, B));\n\n      // Convert back to hexadecimal\n      const RR = (R.toString(16).length === 1) ? \"0\" + R.toString(16) : R.toString(16);\n      const GG = (G.toString(16).length === 1) ? \"0\" + G.toString(16) : G.toString(16);\n      const BB = (B.toString(16).length === 1) ? \"0\" + B.toString(16) : B.toString(16);\n\n      return \"#\" + RR + GG + BB;\n    }\n\n\t// Function to start blinking between two colors\n    function startBlinking(color1, color2, interval) {\n      clearBlinking(); // Clear any existing blinking interval\n    \n      let isColor1 = true; \n      blinkInterval = setInterval(function() {\n        const checkDestroy = document.getElementById('Layer_1_7613749810_957b'); // Important must be name of the SVG!\n        if (!checkDestroy) {\n          clearBlinking(); \n          return;\n        }\n        if (isColor1) {\n          setBaseColor(color1); \n        } else {\n          setBaseColor(color2); \n        }\n        isColor1 = !isColor1; \n      }, interval);\n\n      // Set up the MutationObserver to watch for removal of the SVG element\n      const observer = new MutationObserver((mutations) => {\n        mutations.forEach((mutation) => {\n          mutation.removedNodes.forEach((node) => {\n            if (node.id === 'Layer_1_7613749810_957b') { // Important must be name of the SVG!\n              clearBlinking(); \n              observer.disconnect(); \n            }\n          });\n        });\n      });\n\n      // Start observing the body or a parent element of the SVG\n      observer.observe(document.body, { childList: true, subtree: true }); \n    }\n\n    // Function to clear the blinking interval\n    function clearBlinking() {\n      if (blinkInterval) {\n        clearInterval(blinkInterval);\n        blinkInterval = null;\n      }\n    }\n\n    \n  \nwModule_7613749810_957b.logic = logic;\nwModule_7613749810_957b.init = init;\nwModule_7613749810_957b.putValue = putValue;\nwModule_7613749810_957b.postValue = postValue;\nwModule_7613749810_957b.setBaseColor = setBaseColor;\nwModule_7613749810_957b.percentColor = percentColor;\nwModule_7613749810_957b.startBlinking = startBlinking;\nwModule_7613749810_957b.clearBlinking = clearBlinking;\n})();\nwindow.wModule_7613749810_957b=wModule_7613749810_957b"},"varsToBind":[{"originalName":"_pn_setState","name":"_pn_setState","type":"number","variableId":"t_62474886-d147458f","variableRaw":{"id":"t_62474886-d147458f","name":"age","label":"age","value":8,"type":"number","address":"results:[0]:registered:age","daq":{"enabled":false,"interval":60,"changed":false,"restored":false},"timestamp":1738138310429},"variableValue":"1"},{"originalName":"_pb_boolState","name":"_pb_boolState","type":"boolean","variableId":"t_62474886-d147458f","variableRaw":{"id":"t_62474886-d147458f","name":"age","label":"age","value":8,"type":"number","address":"results:[0]:registered:age","daq":{"enabled":false,"interval":60,"changed":false,"restored":false},"timestamp":1738138310429},"variableValue":"1"},{"originalName":"_pn_setInterval","name":"_pn_setInterval","type":"number"},{"originalName":"_pc_state0Colour","name":"_pc_state0Colour","type":"color"},{"originalName":"_pc_state1Colour","name":"_pc_state1Colour","type":"color"},{"originalName":"_pc_state2Colour","name":"_pc_state2Colour","type":"color"},{"originalName":"_pc_state3Colour","name":"_pc_state3Colour","type":"color"},{"originalName":"_pc_state4Colour","name":"_pc_state4Colour","type":"color"},{"originalName":"_pc_state5Colour","name":"_pc_state5Colour","type":"color"},{"originalName":"_pn_lightShade","name":"_pn_lightShade","type":"number"},{"originalName":"_pn_highLightShade","name":"_pn_highLightShade","type":"number"},{"originalName":"_pn_darkShade","name":"_pn_darkShade","type":"number"},{"originalName":"_pn_shadowShade","name":"_pn_shadowShade","type":"number"}]},"label":"HtmlImage"}},"variables":{},"svgcontent":"<svg width=\"1024\" height=\"768\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:svg=\"http://www.w3.org/2000/svg\" xmlns:html=\"http://www.w3.org/1999/xhtml\">\n <filter height=\"200\" width=\"200\" y=\"-3\" x=\"-3\" id=\"blur-filter\">\n  <feGaussianBlur stdDeviation=\"3\"/>\n </filter>\n <g>\n  <title>Layer 1</title>\n  <g data-name=\"led_1\" font-family=\"sans-serif\" font-size=\"14\" fill=\"#999999\" type=\"svg-ext-gauge_semaphore\" id=\"GSE_1fc33c5e-cddb4250\">\n   <ellipse fill=\"#999999\" ry=\"14\" rx=\"14\" cy=\"377\" cx=\"223\" id=\"GSE_163ea8e1-ceb848d7\"/>\n  </g>\n  <g data-name=\"led_2\" id=\"GSE_01249405-f4384a3c\" type=\"svg-ext-gauge_semaphore\" fill=\"#FFFFFF\" font-size=\"14\" stroke=\"#000000\" font-family=\"sans-serif\">\n   <ellipse id=\"GSE_a3928369-4b45434b\" cx=\"201\" cy=\"213\" rx=\"14\" ry=\"14\" fill=\"#FFFFFF\" stroke=\"#000000\"/>\n  </g>\n  <g data-name=\"shape_2\" xml:space=\"preserve\" text-anchor=\"right\" font-family=\"sans-serif\" font-size=\"14\" fill=\"#FFFFFF\" type=\"svg-ext-own_ctrl-image\" id=\"OXC_8b8f28b8-8ce34e08\">\n   <rect id=\"svg_43899da7-758b411a\" height=\"100\" width=\"100\" y=\"228\" x=\"588\" stroke-width=\"0\"/>\n   <foreignObject id=\"H-OXC_219075d2-785349af\" width=\"100\" height=\"100\" y=\"228\" x=\"588\">\n    <DIV type=\"widget\" style=\"width:100%;height:100%;\" id=\"D-OXC_219075d2-785349af\">\n     <svg height=\"100\" width=\"100\" xml:space=\"preserve\" viewBox=\"0 0 100 100\" y=\"0px\" x=\"0px\" id=\"Layer_1_7613749810_957b\" version=\"1.1\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns=\"http://www.w3.org/2000/svg\">\n      <desc>Copyright Opto 22</desc>\n      <g>\n       <g id=\"shape_7613749810_957b\">\n        <path d=\"M43.433,93.433C19.484,93.433 0,73.949 0,50S19.484,6.567 43.433,6.567L100,6.567L100,39.618L85.606,39.618C86.443,43.018 86.866,46.502 86.866,49.999C86.866,73.949 67.382,93.433 43.433,93.433zM43.433,9.48C21.09,9.48 2.913,27.657 2.913,50S21.09,90.52 43.433,90.52C65.776,90.52 83.953,72.343 83.953,50C83.953,46.138 83.399,42.293 82.308,38.572L81.761,36.706L97.087,36.706L97.087,9.48L43.433,9.48z\" fill=\"#b4b4b4\"/>\n       </g>\n       <g id=\"dark_7613749810_957b\">\n        <path d=\"M43.433,69.729C32.555,69.729 23.705,60.878 23.705,50S32.555,30.272 43.433,30.272C54.311,30.272 63.161,39.122 63.161,50S54.312,69.729 43.433,69.729zM43.433,32.272C33.658,32.272 25.705,40.225 25.705,50S33.658,67.729 43.433,67.729C53.208,67.729 61.161,59.776 61.161,50S53.208,32.272 43.433,32.272z\" fill=\"#bfbfbf\"/>\n        <path d=\"M59.161,9.48L43.433,9.48L43.433,9.524C61.096,9.524 76.142,20.9 81.655,36.707L84.822,36.707C80.807,24.232 71.3,14.208 59.161,9.48z\" fill=\"#bfbfbf\"/>\n       </g>\n      </g>\n     </svg>\n    </DIV>\n   </foreignObject>\n  </g>\n </g>\n</svg>","type":"svg"}