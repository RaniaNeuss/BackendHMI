{
    "swagger": "2.0",
    "info": {
      "version": "1.0.0",
      "title": "User, Project, and View Management API",
      "description": "API documentation for managing users, projects, and views."
    },
    "host": "localhost:5000",
    "basePath": "/api",
    "schemes": ["http"],
    "paths": {
      "/users": {
        "get": {
          "summary": "Get all users",
          "description": "Fetch all users with their associated groups.",
          "responses": {
            "200": {
              "description": "List of users",
              "schema": {
                "$ref": "#/definitions/User"
              }
            }
          }
        },
        "post": {
          "summary": "Create a new user",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/NewUser"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "User created successfully",
              "schema": {
                "$ref": "#/definitions/User"
              }
            },
            "400": {
              "description": "Validation error"
            },
            "409": {
              "description": "User already exists"
            }
          }
        }
      },
      "/users/{id}": {
        "get": {
          "summary": "Get user by ID",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "User ID"
            }
          ],
          "responses": {
            "200": {
              "description": "User details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/definitions/User"
                  }
                }
              }
            },
            "404": {
              "description": "User not found"
            },
            "500": {
              "description": "Unexpected error"
            }
          }
        },
        "delete": {
          "summary": "Delete user by ID",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "User ID"
            }
          ],
          "responses": {
            "204": {
              "description": "User deleted successfully"
            },
            "404": {
              "description": "User not found"
            }
          }
        }
      },
      "/users/login": {
        "post": {
          "summary": "Log in user",
          "parameters": [
        {
          "in": "body",
          "name": "body",
          "required": true,
          "schema": {
            "$ref": "#/definitions/LoginUser"
          }
        }
          ],
          "responses": {
        "200": {
          "description": "User logged in successfully"
        },
        "401": {
          "description": "Unauthorized"
        }
          }
        }
      },
      "/users/logout": {
        "post": {
          "summary": "Log out user",
          "responses": {
            "200": {
              "description": "User logged out successfully"
            },
            "401": {
              "description": "Unauthorized"
            }
          }
        }
      },



      "/users/groups": {
        "get": {
          "summary": "Get all groups",
          "description": "Fetch all groups.",
          "responses": {
            "200": {
              "description": "List of groups",
              "schema": {
                "$ref": "#/definitions/Group"
              }
            }
          }
        }
        ,


        "post": {
          "summary": "Create a new group",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/NewGroup"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Group created successfully",
              "schema": {
                "$ref": "#/definitions/Group"
              }
            },
            "409": {
              "description": "Group already exists"
            }
          }
        }
      },


      "/users/groups/{id}": {
        "delete": {
          "summary": "Delete group by ID",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "Group ID"
            }
          ],
          "responses": {
            "204": {
              "description": "Group deleted successfully"
            },
            "404": {
              "description": "Group not found"
            }
          }
        }
      },







    
   "/projects/getprojects": {
        "get": {
          "summary": "Get all projects",
          "description": "Fetch all projects for the logged-in user.",
          "responses": {
            "200": {
              "description": "List of projects",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/Project"
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized user"
            },
            "500": {
              "description": "Unexpected error"
            }
          }
        }
      },




  "/projects/create": {
  "post": {
    "summary": "Create a new project",
    "description": "Create a project for the logged-in user.",
    "parameters": [
      {
        "in": "body",
        "name": "body",
        "required": true,
        "description": "Project details",
        "schema": {
          "$ref": "#/definitions/createProject"
        }
      }
    ],
    "responses": {
      "201": {
        "description": "Project created successfully",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/definitions/Project"
            }
          }
        }
      },
      "400": {
        "description": "Validation error"
      },
      "401": {
        "description": "Unauthorized user"
      },
      "500": {
        "description": "Unexpected error"
      }
    }
  }
}
,

   "/projects/{id}": {
        "get": {
          "summary": "Get project by ID",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "Project ID"
            }
          ],
          "responses": {
            "200": {
              "description": "Project details",
              "schema": {
                "$ref": "#/definitions/Project"
              }
            },
            "404": {
              "description": "Project not found"
            }
          }
        },
        "put": {
          "summary": "Update project data",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "Project ID"
            },
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/UpdateProject"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Project updated successfully"
            },
            "400": {
              "description": "Validation error"
            },
            "404": {
              "description": "Project not found"
            }
          }
        },
        "delete": {
          "summary": "Delete project by ID",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "Project ID"
            }
          ],
          "responses": {
            "200": {
              "description": "Project deleted successfully"
            },
            "404": {
              "description": "Project not found"
            }
          }
        }
      },











      "/views/{projectId}": {
        "get": {
          "summary": "Get all views for a project",
          "description": "Fetch all views associated with a specific project.",
          "parameters": [
            {
              "name": "projectId",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "Project ID"
            }
          ],
          "responses": {
            "200": {
              "description": "List of views",
              "schema": {
                "$ref": "#/definitions/View"
              }
            },
            "404": {
              "description": "Project not found"
            }
          }
        },
        "post": {
          "summary": "Create a view in a project",
          "parameters": [
            {
              "name": "projectId",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "Project ID"
            },
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/NewView"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "View created successfully",
              "schema": {
                "$ref": "#/definitions/View"
              }
            },
            "400": {
              "description": "Validation error"
            },
            "404": {
              "description": "Project not found"
            }
          }
        }
      },



      "/views/{projectId}/{id}": {
        "get": {
          "summary": "Get a view by ID",
          "parameters": [
            {
              "name": "projectId",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "Project ID"
            },
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "View ID"
            }
          ],
          "responses": {
            "200": {
              "description": "View details",
              "schema": {
                "$ref": "#/definitions/View"
              }
            },
            "404": {
              "description": "View not found"
            }
          }
        },
        "put": {
          "summary": "Update a view by ID",
          "parameters": [
            {
              "name": "projectId",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "Project ID"
            },
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "View ID"
            },
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/UpdateView"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "View updated successfully"
            },
            "404": {
              "description": "View not found"
            }
          }
        },
        "delete": {
          "summary": "Delete a view by ID",
          "parameters": [
            {
              "name": "projectId",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "Project ID"
            },
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string",
              "description": "View ID"
            }
          ],
          "responses": {
            "200": {
              "description": "View deleted successfully"
            },
            "404": {
              "description": "View not found"
            }
          }
        }
      },





      "/items/{viewId}": {
      "get": {
        "summary": "Get all items for a view",
        "description": "Fetch all items associated with a specific view.",
        "parameters": [
          
          {
            "name": "viewId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "View ID"
          }
        ],
        "responses": {
          "200": {
            "description": "List of items",
            "schema": {
              "$ref": "#/definitions/Item"
            }
          },
          "404": {
            "description": "View not found"
          }
        }
      },
      "post": {
        "summary": "Create an item in a view",
        "parameters": [
          
          {
            "name": "viewId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "View ID"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewItem"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Item created successfully",
            "schema": {
              "$ref": "#/definitions/Item"
            }
          },
          "400": {
            "description": "Validation error"
          },
          "404": {
            "description": "View not found"
          }
        }
      }
    },





    "/items/{viewId}/{id}": {
      "get": {
        "summary": "Get an item by ID",
        "parameters": [
        
          {
            "name": "viewId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "View ID"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Item ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Item details",
            "schema": {
              "$ref": "#/definitions/Item"
            }
          },
          "404": {
            "description": "Item not found"
          }
        }
      },
      "put": {
        "summary": "Update an item by ID",
        "parameters": [
         
          {
            "name": "viewId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "View ID"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Item ID"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateItem"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Item updated successfully"
          },
          "404": {
            "description": "Item not found"
          }
        }
      },
      "delete": {
        "summary": "Delete an item by ID",
        "parameters": [
          
          {
            "name": "viewId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "View ID"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Item ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Item deleted successfully"
          },
          "404": {
            "description": "Item not found"
          }
        }
      }
    }, 
    
    





    
    
    "/settings/{projectId}": {
      "get": {
        "summary": "Get all settings for a project",
        "description": "Fetch all settings associated with a specific project.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Project ID"
          }
        ],
        "responses": {
          "200": {
            "description": "List of settings",
            "schema": {
              "$ref": "#/definitions/Settings"
            }
          },
          "404": {
            "description": "Project not found"
          }
        }
      },
      "post": {
        "summary": "Create settings for a project",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Project ID"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewSettings"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Settings created successfully",
            "schema": {
              "$ref": "#/definitions/Settings"
            }
          },
          "400": {
            "description": "Validation error"
          },
          "404": {
            "description": "Project not found"
          }
        }
      }
    },







    "/settings/{projectId}/{id}": {
      "get": {
        "summary": "Get settings by ID",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Project ID"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Settings ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Settings details",
            "schema": {
              "$ref": "#/definitions/Settings"
            }
          },
          "404": {
            "description": "Settings not found"
          }
        }
      },
      "put": {
        "summary": "Update settings by ID",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Project ID"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Settings ID"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateSettings"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Settings updated successfully"
          },
          "404": {
            "description": "Settings not found"
          }
        }
      },
      "delete": {
        "summary": "Delete settings by ID",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Project ID"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Settings ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Settings deleted successfully"
          },
          "404": {
            "description": "Settings not found"
          }
        }
      }
    },
    
    
    "/notifications/{projectId}/": {
      "get": {
        "summary": "Get all notifications for a project",
        "description": "Fetch all notifications associated with a specific project.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Project ID"
          }
        ],
        "responses": {
          "200": {
            "description": "List of notifications",
            "schema": {
              "$ref": "#/definitions/Notification"
            }
          },
          "404": {
            "description": "Project not found"
          }
        }
      },
      "post": {
        "summary": "Create a notification for a project",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Project ID"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewNotification"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Notification created successfully",
            "schema": {
              "$ref": "#/definitions/Notification"
            }
          },
          "400": {
            "description": "Validation error"
          },
          "404": {
            "description": "Project not found"
          }
        }
      }
    },



    "/notifications/{projectId}/{id}": {
      "get": {
        "summary": "Get notification by ID",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Project ID"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Notification ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Notification details",
            "schema": {
              "$ref": "#/definitions/Notification"
            }
          },
          "404": {
            "description": "Notification not found"
          }
        }
      },
      "put": {
        "summary": "Update notification by ID",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Project ID"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Notification ID"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateNotification"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Notification updated successfully"
          },
          "404": {
            "description": "Notification not found"
          }
        }
      },
      "delete": {
        "summary": "Delete notification by ID",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Project ID"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Notification ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Notification deleted successfully"
          },
          "404": {
            "description": "Notification not found"
          }
        }
      }
    }
    },
























    "definitions": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "group": {
            "type": "string"
          }
        }
      },





      "NewUser": {
        "type": "object",
        "required": ["username", "email", "name", "password", "group"],
        "properties": {
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "group": {
            "type": "string"
          }
        }
      },



      "LoginUser": {
        "type": "object",
        "required": ["username", "password"],
        "properties": {
          "username": {
        "type": "string"
          },
          "password": {
        "type": "string"
          }
        }
      },


      
        



      "Group": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },

      "NewGroup": {
        "type": "object",
        "required": ["name"],
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },




      "Project": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          }
        }
      },





"createProject": {
  "type": "object",
  "required": ["name", "description"],
  "properties": {
    "name": {
      "type": "string",
      "description": "The name of the project."
    },
    "description": {
      "type": "string",
      "description": "A brief description of the project."
    }
  },
  "example": {
    "name": "My Project",
    "description": "This is a sample project description."
  }
}


,

      "UpdateProject": {
        "type": "object",
        "required": ["data"],
        "properties": {
          "data": {
            "type": "object"
          }
        }
      },




      "View": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "projectId": {
            "type": "string"
          },
          "width": {
            "type": "integer"
          },
          "height": {
            "type": "integer"
          },
          "backgroundColor": {
            "type": "string"
          },
          "margin": {
            "type": "integer"
          },
          "align": {
            "type": "string"
          },
          "gridType": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "size": {
            "type": "string"
          }
        }
      },
      "NewView": {
        "type": "object",
        "required": ["name", "projectId"],
        "properties": {
          "name": {
            "type": "string"
          },
          "projectId": {
            "type": "string"
          },
          "width": {
            "type": "integer"
          },
          "height": {
            "type": "integer"
          },
          "backgroundColor": {
            "type": "string"
          },
          "margin": {
            "type": "integer"
          },
          "align": {
            "type": "string"
          },
          "gridType": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "size": {
            "type": "string"
          }
        }
      },
      "UpdateView": {
        "type": "object",
        "required": ["name"],
        "properties": {
          "name": {
            "type": "string"
          },
          "width": {
            "type": "integer"
          },
          "height": {
            "type": "integer"
          },
          "backgroundColor": {
            "type": "string"
          },
          "margin": {
            "type": "integer"
          },
          "align": {
            "type": "string"
          },
          "gridType": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "size": {
            "type": "string"
          }
        }
      },  "Item": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "viewId": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "property": {
            "type": "string"
          },
          "events": {
            "type": "string"
          },
          "actions": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "x": {
            "type": "integer"
          },
          "y": {
            "type": "integer"
          },
          "scale": {
            "type": "integer"
          },
          "rotation": {
            "type": "integer"
          },
          "tagId": {
            "type": "string"
          }
        }
      },
      "NewItem": {
        "type": "object",
        "required": ["viewId", "type", "name"],
        "properties": {
          "type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "property": {
            "type": "string"
          },
          "events": {
            "type": "string"
          },
          "actions": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "x": {
            "type": "integer"
          },
          "y": {
            "type": "integer"
          },
          "scale": {
            "type": "integer"
          },
          "rotation": {
            "type": "integer"
          },
          "tagId": {
            "type": "string"
          }
        }
      },
      "UpdateItem": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "property": {
            "type": "string"
          },
          "events": {
            "type": "string"
          },
          "actions": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "x": {
            "type": "integer"
          },
          "y": {
            "type": "integer"
          },
          "scale": {
            "type": "integer"
          },
          "rotation": {
            "type": "integer"
          },
          "tagId": {
            "type": "string"
          }
        }
      },
      
      
      
      
  
      
      "Settings": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "projectId": {
            "type": "string"
          },
          "system": {
            "type": "string"
          },
          "smtp": {
            "type": "string"
          },
          "daqstore": {
            "type": "string"
          },
          "alarms": {
            "type": "string"
          }
        }
      },


      "NewSettings": {
        "type": "object",
        "required": ["projectId", "system", "smtp", "daqstore", "alarms"],
        "properties": {
          "system": {
            "type": "string"
          },
          "smtp": {
            "type": "string"
          },
          "daqstore": {
            "type": "string"
          },
          "alarms": {
            "type": "string"
          }
        }
      },

      "UpdateSettings": {
        
        "type": "object",
        "properties": {
          "system": {
            "type": "string"
          },
          "smtp": {
            "type": "string"
          },
          "daqstore": {
            "type": "string"
          },
          "alarms": {
            "type": "string"
          }
        }
      },



      "Notification": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "projectId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "receiver": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "delay": {
            "type": "integer"
          },
          "interval": {
            "type": "integer"
          },
          "enabled": {
            "type": "boolean"
          },
          "subscriptions": {
            "type": "string"
          }
        }
      },


      "NewNotification": {
        "type": "object",
        "required": ["projectId", "name", "receiver", "type"],
        "properties": {
          "name": {
            "type": "string"
          },
          "receiver": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "delay": {
            "type": "integer"
          },
          "interval": {
            "type": "integer"
          },
          "enabled": {
            "type": "boolean"
          },
          "subscriptions": {
            "type": "string"
          }
        }
      },


      "UpdateNotification": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "receiver": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "delay": {
            "type": "integer"
          },
          "interval": {
            "type": "integer"
          },
          "enabled": {
            "type": "boolean"
          },
          "subscriptions": {
            "type": "string"
          }
        }
      }
    }
  }


    
      
    
  

  

  